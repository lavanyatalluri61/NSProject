JS Part1: Intro, History and Declaring Variables
##################################################
1995: Netscape, Brendan Eich - founder of JS
Late 1990s: Dynamic HTML 
2008: Chrome and V8 (written in c++)
2009: nodejs (JS for server side development)
2011: jQuery
2012: JSON
2013: MongoDB (JS for database work)
2013: Proliferation of dozens of frameworks for frontend development (reacr, AngularJS, vue, EJS, webpack)
MERN stack
M - MongoDB
E - Express (REST APIs on HTTP)
R - React
N - Nodejs

webkit is for css
v8 is for JS

Problems with var:
1. It is Redeclarable
var a = 5;
var a = true;
2. var is function scope
3. var is hoisted
4. var is added as a property in window

Actual name of javascript is Ecmascript 
that's why JS versions have ES prefix.
for example: 
ES1995 or ES1
ES2015 or ES6
ES2016 or ES7
TC39 committee inside ECMA is responsible for handling the language specification for JS.

...
ES2021 or ES12 Latest Phase
ES2022 or ES13

https://javascript.info/

########################################################
JS-Part2

Functions in JS:
    - Ways of creating a function in JS
        1. Funtion Declaration
            fnction name() {
                //function body
            }
        2. Function Expression
            const name = function() {
                //function body
            }
        3. Arrow Function
            const name = () => {
                //function body
            }
    - Handling Arguments in JS
    -  Scope(Closure)
        1. Global Scope
        2. Function Scope
        3. Block Scope
            only followed by let and const but not for var
    -  Hoisting for var and function declarations

windows + shift + s -- shortcut to select the screenshot

Important Points
#####################################
1. which one should you use among var, let and const?
var shouldn't be used anymore. its not recommended.
let - if the variables value will change
const - if the variables value will never change

2. angular, react js will helps you to create html n css programmatically. Deals with the frontend of the application.
node js, express and MongoDB deals with the backend of the application.

3. Guess the output?
function test() {
    if(true) {
        var t = 1;
    }
    console.log(t * 5);
}
test();

A. No error

4. Guess the output?
function is_senior() {
    {
        const AGE_LIMIT = 60;
    }
    if(age > AGE_LIMIT) {
        return true;
    }
    else {
        return false;
    }
    
}
is_senior(58);

A. error - AGE_LIMIT is not accessible outside Block

5. What is the problem with this code?
let MAX_AGE = 60;
function is_senior() {
    let MAX_AGE = 55;
    if(age > MAX_AGE) {
        return true;
    }
    else {
        return false;
    }
}
is_senior(58);

A. Yes, error - MAX_AGE is already defined outside of the function.

6. What is the problem with this code?
var MAX_AGE = 60;
function is_senior() {
    var MAX_AGE = 55;
    if(age > MAX_AGE) {
        return true;
    }
    else {
        return false;
    }
}
is_senior(58);

A. No Error. But it is not recommended to create duplicate variables
